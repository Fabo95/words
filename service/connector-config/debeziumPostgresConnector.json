{
  "name": "debezium-connector-postgresql",
  "config": {
    "connector.class": "io.debezium.connector.postgresql.PostgresConnector",
    "database.hostname": "postgres-db",
    "database.port": "5432",
    "database.user": "root",
    "database.password": "password",
    "database.dbname": "app_db",
    "topic.prefix": "words-db",
    "table.include.list": "public.users",
    "plugin.name": "pgoutput",
    "slot.name": "debezium_slot",
    "publication.name": "debezium_pub",
    "snapshot.mode": "initial",

    "topic.creation.default.replication.factor": 3,
    "topic.creation.default.partitions": 3,
    "topic.creation.default.cleanup.policy": "compact",
    "topic.creation.default.compression.type": "lz4",

    "key.converter": "io.confluent.connect.avro.AvroConverter",
    "value.converter": "io.confluent.connect.avro.AvroConverter",
    "key.converter.schema.registry.url": "http://kafka-schema-registry:8081",
    "value.converter.schema.registry.url": "http://kafka-schema-registry:8081",

    "errors.tolerance": "all",
    "errors.deadletterqueue.topic.name": "dlq_user.registered",
    "errors.deadletterqueue.topic.replication.factor": 3,
    "retry.backoff.ms": 1000,
    "max.retries": 5,

    "transforms": "filterCreateEvents,routeTopic",
    "transforms.filterCreateEvents.type": "io.debezium.transforms.Filter",
    "transforms.filterCreateEvents.language": "jsr223.groovy",
    "transforms.filterCreateEvents.condition": "value.op == 'c'",
    "transforms.routeTopic.type": "org.apache.kafka.connect.transforms.RegexRouter",
    "transforms.routeTopic.regex": "words-db.public.users",
    "transforms.routeTopic.replacement": "words-db.users.created"
  }
}