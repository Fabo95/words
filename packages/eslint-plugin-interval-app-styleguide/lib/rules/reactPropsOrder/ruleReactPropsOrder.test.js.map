{"version":3,"file":"ruleReactPropsOrder.test.js","sourceRoot":"","sources":["../../../src/rules/reactPropsOrder/ruleReactPropsOrder.test.ts"],"names":[],"mappings":";;AAAA,8EAAiE;AACjE,+FAA4F;AAE5F,MAAM,UAAU,GAAwB,IAAI,6BAAQ,CAAC,UAAU,CAAC;IAC9D,GAAG,EAAE;QACH,OAAO,EAAE,IAAI;QACb,MAAM,EAAE,IAAI;KACb;IACD,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,2BAA2B,CAAC;IACpD,aAAa,EAAE;QACb,YAAY,EAAE;YACZ,GAAG,EAAE,IAAI;SACV;QACD,WAAW,EAAE,EAAE;QACf,UAAU,EAAE,QAAQ;KACrB;CACF,CAAC,CAAC;AAEH,MAAM,eAAe,GAAiC;IACpD;QACE,IAAI,EAAE;;;;;;mBAMS;KAChB;IACD;QACE,IAAI,EAAE;;;;;;mCAMyB;KAChC;IACD,EAAE,IAAI,EAAE,kEAAkE,EAAE;IAC5E;QACE,IAAI,EAAE;;;;;;mBAMS;KAChB;IACD;QACE,IAAI,EAAE;;;;mBAIS;KAChB;CACF,CAAC;AAEF,MAAM,iBAAiB,GAAqD;IAC1E;QACE,IAAI,EAAE;;;;;WAKC;QACP,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;QACzC,MAAM,EAAE;;;;;WAKD;KACR;IACD;QACE,IAAI,EAAE;;;;;mBAKS;QACf,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;QACzC,MAAM,EAAE;;;;;mBAKO;KAChB;IACD;QACE,IAAI,EAAE;;;;mBAIS;QACf,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;QACzC,MAAM,EAAE;;;;mBAIO;KAChB;IACD;QACE,IAAI,EAAE,qGAAqG;QAC3G,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;QACzC,MAAM,EAAE,qGAAqG;KAC9G;IACD;QACE,IAAI,EAAE;;;;;;mBAMS;QACf,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;QACzC,MAAM,EAAE;;;;;;mBAMO;KAChB;CACF,CAAC;AAEF,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,yCAAmB,EAAE;IACvD,KAAK,EAAE,eAAe;IACtB,OAAO,EAAE,iBAAiB;CAC3B,CAAC,CAAC","sourcesContent":["import { TSESLint } from \"@typescript-eslint/experimental-utils\";\nimport { RuleReactPropsOrder } from \"@styleguide/rules/reactPropsOrder/ruleReactPropsOrder\";\n\nconst ruleTester: TSESLint.RuleTester = new TSESLint.RuleTester({\n  env: {\n    browser: true,\n    es2021: true,\n  },\n  parser: require.resolve(\"@typescript-eslint/parser\"),\n  parserOptions: {\n    ecmaFeatures: {\n      jsx: true,\n    },\n    ecmaVersion: 12,\n    sourceType: \"module\",\n  },\n});\n\nconst validStatements: TSESLint.ValidTestCase<[]>[] = [\n  {\n    code: `<Box\n                    $background={SEARCH_JOB_ICON_COLOR}\n                    $display=\"inline\" $justify=\"center\"\n                    // Lineheight is 1.7 so 35% is half of 0.7\n                    $marginTop={percent(35)}\n                    {...size(px(16))}\n                />`,\n  },\n  {\n    code: `<FormPageHeading\n                    id={SETTINGS_SECTIONS.account.subSections?.colloquial.anchor}\n                    $level={2}\n                    $marginBottom={spacingPx(3)}\n                >\n                    {SETTINGS_SECTIONS.account.subSections?.colloquial.sectionName}\n                </FormPageHeading>`,\n  },\n  { code: `<Box $width={px(245)} {...(isMobile && { $align: \"center\" })} />` },\n  {\n    code: `<Box\n                    $align=\"stretch\"\n                    $borderRadius={REGULAR_BORDER_RADIUS}\n                    $width={px(260)}\n                    {...(isMobile && {$margin: spacingPx(1, 0), $width: percent(100),})}\n                    {...styleProps}\n                />`,\n  },\n  {\n    code: `<Jusssomething\n                    onChange={changeAtsProvider}\n                    options={atsProviderSelectOptions}\n                    $marginBottom={(spacingPx(4))}\n                />`,\n  },\n];\n\nconst invalidStatements: TSESLint.InvalidTestCase<\"defaultMessage\", []>[] = [\n  {\n    code: `<LandingProcessSectionSvgMobile\n        currentIndex={currentIndex}\n        step={processSection}\n        dataTest={\\`process-section-section-\\${index}\\`}\n        selectIndex={selectIndex}\n        />`,\n    errors: [{ messageId: \"defaultMessage\" }],\n    output: `<LandingProcessSectionSvgMobile\n        currentIndex={currentIndex}\n        dataTest={\\`process-section-section-\\${index}\\`}\n        selectIndex={selectIndex}\n        step={processSection}\n        />`,\n  },\n  {\n    code: `<SideBarPageItem\n                    alt=\"Seitenleiste Bewerbungen Symbol\"\n                    $sth={wdwd}\n                    text=\"Bewerbungen\"\n                    to={CbUrl.APPLICATION_LIST}\n                />`,\n    errors: [{ messageId: \"defaultMessage\" }],\n    output: `<SideBarPageItem\n                    alt=\"Seitenleiste Bewerbungen Symbol\"\n                    text=\"Bewerbungen\"\n                    to={CbUrl.APPLICATION_LIST}\n                    $sth={wdwd}\n                />`,\n  },\n  {\n    code: `<SettingsNavigationAnchor\n                    isActive={SettingsSectionName.PASSWORD_CHANGE === activeSection}\n                    sectionName={SettingsSectionName.PASSWORD_CHANGE}\n                    handleSetActiveSection={handleSetActiveSection}\n                />`,\n    errors: [{ messageId: \"defaultMessage\" }],\n    output: `<SettingsNavigationAnchor\n                    handleSetActiveSection={handleSetActiveSection}\n                    isActive={SettingsSectionName.PASSWORD_CHANGE === activeSection}\n                    sectionName={SettingsSectionName.PASSWORD_CHANGE}\n                />`,\n  },\n  {\n    code: `<img {...px(sth)} className=\"allowed-applicant__img\" src={getFullUrl(props.src)} alt={props.alt} />`,\n    errors: [{ messageId: \"defaultMessage\" }],\n    output: `<img {...px(sth)} alt={props.alt} className=\"allowed-applicant__img\" src={getFullUrl(props.src)} />`,\n  },\n  {\n    code: `<Select\n                    {...wdwd}\n                    value={currentlySelectedAtsProvider}\n                    options={atsProviderSelectOptions}\n                    $marginBottom={(spacingPx(4))}\n                    onChange={changeAtsProvider}\n                />`,\n    errors: [{ messageId: \"defaultMessage\" }],\n    output: `<Select\n                    {...wdwd}\n                    onChange={changeAtsProvider}\n                    options={atsProviderSelectOptions}\n                    value={currentlySelectedAtsProvider}\n                    $marginBottom={(spacingPx(4))}\n                />`,\n  },\n];\n\nruleTester.run(\"react-props-order\", RuleReactPropsOrder, {\n  valid: validStatements,\n  invalid: invalidStatements,\n});\n"]}